# Project: adams
# Date: 2019-01-09 12:09:05
# User: habdelqa
# Charset: UTF-8
# Modules: adams-access,adams-audio,adams-cntk,adams-cntk-weka,adams-compress,adams-core,adams-cqengine,adams-event,adams-excel,adams-ffmpeg,adams-gnuplot,adams-groovy,adams-groovy-webservice,adams-heatmap,adams-image-webservice,adams-imaging,adams-imaging-boofcv,adams-imaging-imagemagick,adams-imaging-openimaj,adams-jooq,adams-jython,adams-latex,adams-maps,adams-meka,adams-meka-webservice,adams-meta,adams-ml,adams-moa,adams-mongodb,adams-net,adams-nlp,adams-odf,adams-osm,adams-pdf,adams-phmm4weka,adams-python,adams-r,adams-random,adams-rats,adams-rest,adams-rsync,adams-spreadsheet,adams-timeseries,adams-twitter,adams-twitter-rats,adams-video,adams-visualstats,adams-webservice,adams-weka,adams-weka-webservice
#
adams.flow.control.Flow -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -display-type adams.flow.core.displaytype.Default -writer adams.data.io.output.NullWriter
 adams.flow.standalone.SetVariable -var-name restore_file -var-value @{flow_filename_long}.props -expand-value true
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name datasets_dir -display \"Datasets Directory\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name output_dir -display \"Output Directory\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name config_yaml -display \"Config Yaml File\" -help \"Configuration yaml file\" -type FILE_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name python_exec -display \"Python Executable\" -help \"Python file to execute the train/test script\" -type FILE_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name python_script_dir -display \"Detectron Script Directory\" -help \"Top level directroy of script for training and testing using Detectron\" -type DIRECTORY_ABSOLUTE -default-value ." -output-type MAP -restoration-enabled true -restoration-file @{restore_file}
  adams.flow.transformer.MapToVariables
  adams.flow.control.Trigger -name "Python Script"
   adams.flow.source.Variable -var-name python_script_dir -conversion adams.data.conversion.StringToString
   adams.flow.transformer.AppendName -suffix tools/train_net.py -use-forward-slashes true
   adams.flow.transformer.SetVariable -var-name python_script
  adams.flow.control.Trigger -name "Dataset Catalogue"
   adams.flow.source.Variable -var-name python_script_dir -conversion adams.data.conversion.StringToString
   adams.flow.transformer.AppendName -suffix detectron/datasets/dataset_catalog.py -use-forward-slashes true
   adams.flow.transformer.SetVariable -var-name dataset_catalog
 adams.flow.control.Trigger -name "Read Datasets Dir"
  adams.flow.standalone.PythonEnvironment -python-path-env-var /Scratch/habdelqa/detectron-venv/detectron -python-path-update-type REPLACE -python @{python_exec}
  adams.flow.source.FileSystemSearch -search "adams.flow.source.filesystemsearch.LocalDirectorySearch -directory @{datasets_dir} -regexp .* -sorting SORT_BY_NAME" -use-forward-slashes true
  adams.flow.control.Tee -name "Fold Dir"
   adams.flow.transformer.SetVariable -name "Fold Directory" -var-name fold_dir
   adams.flow.transformer.BaseName
   adams.flow.transformer.SetVariable -var-name fold_num
  adams.flow.control.Trigger -name "Update Dataset Catalogue"
   adams.flow.source.Variable -var-name dataset_catalog -conversion adams.data.conversion.StringToString
   adams.flow.transformer.TextFileReader -reader adams.data.io.input.LineArrayTextReader
   adams.flow.control.ArrayProcess
    adams.flow.control.Tee -name "Remove Double Quotation"
     adams.flow.transformer.StringReplace -find "\\\"" -type SIMPLE
     adams.flow.transformer.SetVariable -var-name line
    adams.flow.control.ConditionalSubProcess -name "If Train Dir" -condition "adams.flow.condition.bool.Expression -expression \"matches(\\\\\\\"@{line}\\\\\\\", \\\\\\\".*# generic_train_dir\\\\\\\")\""
     adams.flow.transformer.StringReplace -find .* -replace "        _IM_DIR: \\\'@{fold_dir}/train\\\',  # generic_train_dir" -variable true
    adams.flow.control.ConditionalSubProcess -name "If Train Annotations" -condition "adams.flow.condition.bool.Expression -expression \"matches(\\\\\\\"@{line}\\\\\\\", \\\\\\\".*# generic_train_annotations\\\\\\\")\""
     adams.flow.transformer.StringReplace -find .* -replace "        _ANN_FN: \\\'@{fold_dir}/annotations/annotations.json\\\'  # generic_train_annotations" -variable true
    adams.flow.control.ConditionalSubProcess -name "If Val Dir" -condition "adams.flow.condition.bool.Expression -expression \"matches(\\\\\\\"@{line}\\\\\\\", \\\\\\\".*# generic_val_dir\\\\\\\")\""
     adams.flow.transformer.StringReplace -find .* -replace "        _IM_DIR: \\\'@{fold_dir}/val\\\',  # generic_val_dir" -variable true
    adams.flow.control.ConditionalSubProcess -name "If Val Annotations" -condition "adams.flow.condition.bool.Expression -expression \"matches(\\\\\\\"@{line}\\\\\\\", \\\\\\\".*# generic_val_annotations\\\\\\\")\""
     adams.flow.transformer.StringReplace -find .* -replace "        _ANN_FN: \\\'@{fold_dir}/val/annotations.json\\\'  # generic_val_annotations" -variable true
   adams.flow.transformer.StringJoin -glue \n
   adams.flow.sink.DumpFile -output @{dataset_catalog}
  adams.flow.control.Trigger -name "Update Config Yaml"
   adams.flow.source.Variable -var-name config_yaml -conversion adams.data.conversion.StringToString
   adams.flow.transformer.TextFileReader -reader adams.data.io.input.LineArrayTextReader
   adams.flow.control.ArrayProcess
    adams.flow.control.Tee -name "Remove Double Quotation"
     adams.flow.transformer.StringReplace -find "\\\"" -type SIMPLE
     adams.flow.transformer.SetVariable -var-name line
    adams.flow.control.ConditionalSubProcess -name "If Output Dir" -condition "adams.flow.condition.bool.Expression -expression \"matches(\\\\\\\"@{line}\\\\\\\", \\\\\\\".*# Output Directory\\\\\\\")\""
     adams.flow.transformer.StringReplace -find .* -replace "OUTPUT_DIR: @{output_dir}/@{fold_num} # Output Directory" -variable true
   adams.flow.transformer.StringJoin -glue \n
   adams.flow.sink.DumpFile -output @{config_yaml}
  adams.flow.control.Trigger -name "Generate Train Command"
   adams.flow.standalone.SetVariable -name "train template" -var-name train_template -var-value "--cfg @{config_yaml}"
   adams.flow.source.Variable -var-name train_template -conversion adams.data.conversion.StringToString
   adams.flow.transformer.ExpandVariables
   adams.flow.transformer.SetVariable -var-name train_options
  adams.flow.control.Trigger -name "Execute Python (Train)"
   adams.flow.source.PythonExec -output-type BOTH -prefix-stdout [OUT] -prefix-stderr [ERR] -script @{python_script} -script-options @{train_options}
   adams.flow.sink.CallableSink -callable Display