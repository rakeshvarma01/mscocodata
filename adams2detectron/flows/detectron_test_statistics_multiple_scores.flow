# Project: adams
# Date: 2019-02-20 09:56:05
# User: habdelqa
# Charset: UTF-8
# Modules: adams-cntk,adams-compress,adams-core,adams-event,adams-imaging,adams-imaging-boofcv,adams-latex,adams-meta,adams-ml,adams-net,adams-pdf,adams-python,adams-random,adams-rats,adams-rest,adams-spreadsheet,adams-tensorflow,adams-visualstats,adams-webservice
#
adams.flow.control.Flow -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.control.Tee -name "location to vars" -annotation "input: location string (x y w h), \\nsets vars: x y w h"
   adams.flow.transformer.StringSplit -expression " "
   adams.flow.control.Tee -name x
    adams.flow.transformer.GetArrayElement
    adams.flow.transformer.SetVariable -var-name x
   adams.flow.control.Tee -name y
    adams.flow.transformer.GetArrayElement -index 2
    adams.flow.transformer.SetVariable -var-name y
   adams.flow.control.Tee -name w
    adams.flow.transformer.GetArrayElement -index 3
    adams.flow.transformer.SetVariable -var-name w
   adams.flow.control.Tee -name h
    adams.flow.transformer.GetArrayElement -index 4
    adams.flow.transformer.SetVariable -var-name h
  adams.flow.control.Trigger -name "parse locations"
   adams.flow.source.Variable -var-name bbox -conversion adams.data.conversion.StringToString
   adams.flow.transformer.CallableTransformer -callable "location to vars"
   adams.flow.transformer.IncVariable -var-name count
   adams.flow.transformer.SetVariable -name x -var-name field_x -var-value Object.@{count}.x[N] -expand-value true
   adams.flow.transformer.SetVariable -name y -var-name field_y -var-value Object.@{count}.y[N] -expand-value true
   adams.flow.transformer.SetVariable -name w -var-name field_w -var-value Object.@{count}.width[N] -expand-value true
   adams.flow.transformer.SetVariable -name h -var-name field_h -var-value Object.@{count}.height[N] -expand-value true
   adams.flow.transformer.SetVariable -name label -var-name field_type -var-value Object.@{count}.type[S] -expand-value true
   adams.flow.control.Trigger -name "append report"
    adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.SetReportValue -name x -field @{field_x} -value @{x}
    adams.flow.transformer.SetReportValue -name y -field @{field_y} -value @{y}
    adams.flow.transformer.SetReportValue -name w -field @{field_w} -value @{w}
    adams.flow.transformer.SetReportValue -name h -field @{field_h} -value @{h}
    adams.flow.transformer.SetReportValue -name type -field @{field_type} -value @{label}
    adams.flow.transformer.SetStorageValue -storage-name @{report_storage_name}
  adams.flow.control.Sequence -name "save and display stats"
   adams.flow.transformer.SetVariable -var-name stats_output_file -var-value @{output_dir}/stats_@{min_score}.csv -expand-value true
   adams.flow.control.Tee -name save
    adams.flow.sink.SpreadSheetFileWriter -output @{stats_output_file} -writer adams.data.io.output.CsvSpreadSheetWriter
   adams.flow.sink.SpreadSheetDisplay -name stats -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -allow-search true -writer adams.data.io.output.NullWriter
  adams.flow.control.Sequence -name "save and display confmatrix"
   adams.flow.control.Trigger -name "output file"
    adams.flow.source.Variable -var-name entry -conversion adams.data.conversion.StringToValidFileName
    adams.flow.transformer.StringInsert -after true -value _@{min_score}.csv -variable true
    adams.flow.transformer.PrependDir -prefix @{output_dir}
    adams.flow.transformer.SetVariable -var-name output_file
   adams.flow.control.Tee -name save
    adams.flow.sink.SpreadSheetFileWriter -output @{output_file} -writer adams.data.io.output.CsvSpreadSheetWriter
   adams.flow.sink.DisplayPanelManager -display-type adams.flow.core.displaytype.Default -width 740 -x -3 -provider "adams.flow.sink.SpreadSheetDisplay -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer \"adams.gui.core.spreadsheettable.ConfusionMatrixCellRenderingCustomizer -value-based-background true -background-color-generator \\\"adams.gui.visualization.core.BiColorGenerator -first-color #ffffff -second-color #ff0000 -alpha 128\\\"\" -writer adams.data.io.output.NullWriter" -entry-name-variable entry -allow-search true
 adams.flow.standalone.SetVariable -var-name restore_file -var-value @{flow_filename_long}.props -expand-value true
 adams.flow.standalone.SetVariable -name "SetVariable (2)" -var-name best_accuracy -var-value 0
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name annotations_dir -display \"Directory with Annotations JSON Files\" -help \"top level directory of annotations json files\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name test_dir -display \"Test Directory with Results JSON Files\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name output_dir -display \"Output Directory \" -help \"directroy to store output statistics\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name map_file -display \"Map file\" -type FILE_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name min_score_inc -display \"Min Score Increments (1-100%)\" -help \"value for incrementing the min score by 1-100%\" -type DOUBLE -default-value 5" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name min_overlap_removal -display \"Min Overlap Removal\" -help \"minimum perc of overlapping objects to remove (0-1)\" -type DOUBLE -default-value 0.9" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name min_overlap -display \"Min Overlap of Objects\" -help \"minimum perc of overlapping objects to consider same (0-1)\" -type DOUBLE -default-value 0.9" -output-type MAP -restoration-enabled true -restoration-file @{restore_file}
  adams.flow.transformer.MapToVariables
 adams.flow.control.Trigger -name "create output dir"
  adams.flow.source.Variable -var-name output_dir -conversion adams.data.conversion.StringToString
  adams.flow.transformer.MakeDir
 adams.flow.control.Trigger -name "load map"
  adams.flow.source.Variable -var-name map_file -conversion adams.data.conversion.StringToString
  adams.flow.transformer.TextFileReader -reader adams.data.io.input.LineArrayTextReader
  adams.flow.control.ArrayProcess
   adams.flow.transformer.StringReplace -find \t.*
  adams.flow.transformer.StringMatcher -regexp __.* -invert true
  adams.flow.transformer.SetStorageValue -storage-name classes
  adams.flow.transformer.SetVariable -name "init stats cols" -var-name stats_columns -var-value dataset,actual_num,predicted_num,overlap_num,fp_num,fn_num,overlap_perc,matching_num,matching_perc,accuracy(%) -expand-value true
  adams.flow.transformer.SetVariable -name "init annotations cols" -var-name annotations_columns -var-value dataset,image,bbox,label -expand-value true
  adams.flow.transformer.SetVariable -name "init predict cols" -var-name predict_columns -var-value dataset,image,bbox,label,score -expand-value true
  adams.flow.control.Tee -name "iterate classes"
   adams.flow.transformer.ArrayToSequence
   adams.flow.transformer.SetVariable -var-name class
   adams.flow.transformer.SetVariable -name "append stats cols" -var-name stats_columns -var-value ,@{class}_overlap_num,@{class}_matching_num,@{class}_matching_perc -update-type APPEND -expand-value true
 adams.flow.control.Trigger -name "init annotations sheet"
  adams.flow.source.NewSpreadSheet -columns @{annotations_columns} -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
  adams.flow.transformer.SetStorageValue -storage-name actual
 adams.flow.control.Trigger -name "init predict sheet"
  adams.flow.source.NewSpreadSheet -columns @{predict_columns} -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
  adams.flow.transformer.SetStorageValue -storage-name predict
 adams.flow.control.Trigger -name "Iterate Annotations json files"
  adams.flow.source.FileSystemSearch -search "adams.flow.source.filesystemsearch.LocalDirectorySearch -directory @{annotations_dir} -sorting SORT_BY_NAME"
  adams.flow.control.Tee -name "Dataset name"
   adams.flow.transformer.BaseName
   adams.flow.transformer.SetVariable -var-name dataset
  adams.flow.control.Tee -name "Load annotations"
   adams.flow.transformer.AppendName -suffix val/annotations.json -use-forward-slashes true
   adams.flow.transformer.JsonFileReader
   adams.flow.transformer.GetJsonValue -name "Get Annotations" -path annotations -data-type ARRAY
   adams.flow.transformer.Convert -name "Convert (2)" -conversion adams.data.conversion.JsonArrayToArray
   adams.flow.transformer.ArrayToSequence
   adams.flow.transformer.Convert -conversion adams.data.conversion.JsonObjectToMap
   adams.flow.control.Tee -name "get image"
    adams.flow.transformer.GetMapValue -key image_id
    adams.flow.transformer.SetVariable -var-name obj_image
   adams.flow.control.Tee -name "get bbox"
    adams.flow.transformer.GetMapValue -key bbox
    adams.flow.transformer.Convert -conversion adams.data.conversion.JsonToString
    adams.flow.transformer.StringReplace -find .(.*),(.*),(.*),(.*). -replace "$1 $2 $3 $4"
    adams.flow.transformer.SetVariable -var-name obj_bbox
   adams.flow.control.Tee -name "get label"
    adams.flow.transformer.GetMapValue -key category_id
    adams.flow.transformer.SetVariable -var-name obj_label
   adams.flow.control.Trigger -name "map to class name"
    adams.flow.source.StorageValue -storage-name classes -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.GetArrayElement -name "Get class name" -index @{obj_label}
    adams.flow.transformer.SetVariable -var-name obj_label
   adams.flow.control.Trigger -name "append to actual sheet"
    adams.flow.source.NewSpreadSheet -spreadsheet-name tmp -columns @{annotations_columns} -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
    adams.flow.transformer.SpreadSheetInsertRow
    adams.flow.transformer.SpreadSheetSetCell -row first -col first -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{dataset} -force-string true
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (4)" -row first -col second -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_image} -force-string true
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (2)" -row first -col third -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_bbox}
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (3)" -row first -col last -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_label}
    adams.flow.transformer.SpreadSheetAppend -storage-name actual
    adams.flow.transformer.SetStorageValue -storage-name actual
 adams.flow.control.Trigger -name "Iterate test json files"
  adams.flow.source.FileSystemSearch -search "adams.flow.source.filesystemsearch.LocalDirectorySearch -directory @{test_dir} -sorting SORT_BY_NAME"
  adams.flow.control.Tee -name "Dataset name"
   adams.flow.transformer.BaseName
   adams.flow.transformer.SetVariable -var-name dataset
  adams.flow.control.Tee -name "Load predictions"
   adams.flow.transformer.AppendName -suffix test/generic_val/generalized_rcnn/bbox_generic_val_results.json -use-forward-slashes true
   adams.flow.transformer.JsonFileReader -type ARRAY
   adams.flow.transformer.Convert -name "Convert (3)" -conversion adams.data.conversion.JsonArrayToArray
   adams.flow.transformer.ArrayToSequence -name "ArrayToSequence (2)"
   adams.flow.transformer.Convert -conversion adams.data.conversion.JsonObjectToMap
   adams.flow.control.Tee -name "get image"
    adams.flow.transformer.GetMapValue -key image_id
    adams.flow.transformer.SetVariable -var-name obj_image
   adams.flow.control.Tee -name "get bbox"
    adams.flow.transformer.GetMapValue -key bbox
    adams.flow.transformer.Convert -conversion adams.data.conversion.JsonToString
    adams.flow.transformer.StringReplace -find .(.*),(.*),(.*),(.*). -replace "$1 $2 $3 $4"
    adams.flow.transformer.SetVariable -var-name obj_bbox
   adams.flow.control.Tee -name "get label"
    adams.flow.transformer.GetMapValue -key category_id
    adams.flow.transformer.SetVariable -var-name obj_label
   adams.flow.control.Trigger -name "map to class name"
    adams.flow.source.StorageValue -storage-name classes -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.GetArrayElement -name "Get class name" -index @{obj_label}
    adams.flow.transformer.SetVariable -var-name obj_label
   adams.flow.control.Tee -name "get score"
    adams.flow.transformer.GetMapValue -key score
    adams.flow.transformer.SetVariable -var-name obj_score
   adams.flow.control.Trigger -name "append to predict sheet"
    adams.flow.source.NewSpreadSheet -spreadsheet-name tmp -columns @{predict_columns} -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
    adams.flow.transformer.SpreadSheetInsertRow
    adams.flow.transformer.SpreadSheetSetCell -row first -col first -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{dataset} -force-string true
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (5)" -row first -col second -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_image} -force-string true
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (2)" -row first -col third -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_bbox}
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (3)" -row first -col 4 -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_label}
    adams.flow.transformer.SpreadSheetSetCell -name "SpreadSheetSetCell (4)" -row first -col last -finder "adams.data.spreadsheet.cellfinder.RowFinderRange -row-finder \"adams.data.spreadsheet.rowfinder.ByIndex -rows last\"" -value @{obj_score}
    adams.flow.transformer.SpreadSheetAppend -storage-name predict
    adams.flow.transformer.SetStorageValue -storage-name predict
 adams.flow.control.Trigger -name "Compare actual and predict multiple times"
  adams.flow.source.ForLoop -lower 0 -upper 100 -step @{min_score_inc}
  adams.flow.transformer.MathExpression -expression X/100
  adams.flow.transformer.SetVariable -var-name min_score
  adams.flow.control.Trigger -name "init stats sheet"
   adams.flow.source.NewSpreadSheet -columns @{stats_columns} -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
   adams.flow.transformer.SetStorageValue -storage-name stats
  adams.flow.control.Trigger -name "init confusion matrix sheet"
   adams.flow.source.NewSpreadSheet -columns File,Actual,Predicted,Probability -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet
   adams.flow.transformer.SetStorageValue -storage-name confmatrix
  adams.flow.control.Trigger -name "Compare actual and predict"
   adams.flow.source.StorageValue -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index first
   adams.flow.transformer.SetVariable -var-name dataset
   adams.flow.control.Trigger -name "Init actual report"
    adams.flow.source.StorageValue -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
    adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
    adams.flow.transformer.SetVariable -var-name image_id
    adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
    adams.flow.control.ConditionalTrigger -name "New report?" -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.HasStorageValue -storage-name @{report_storage_name}\""
     adams.flow.source.NewReport
     adams.flow.transformer.SetVariable -var-name count -var-value 0
     adams.flow.transformer.SetStorageValue -storage-name @{report_storage_name}
    adams.flow.control.Trigger -name "Add objects"
     adams.flow.source.StorageValue -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetRowFilter -name "SpreadSheetRowFilter (2)" -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index second -reg-exp @{image_id}"
     adams.flow.transformer.SpreadSheetVariableRowIterator -columns bbox,label -lenient true
     adams.flow.transformer.CallableTransformer -callable "parse locations"
   adams.flow.control.Trigger -name "Init predict report"
    adams.flow.source.StorageValue -storage-name predict -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
    adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
    adams.flow.transformer.SetVariable -var-name image_id
    adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_predict_@{image_id} -expand-value true
    adams.flow.control.ConditionalTrigger -name "New report?" -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.HasStorageValue -storage-name @{report_storage_name}\""
     adams.flow.source.NewReport
     adams.flow.transformer.SetVariable -var-name count -var-value 0
     adams.flow.transformer.SetStorageValue -storage-name @{report_storage_name}
    adams.flow.control.Trigger -name "Add objects"
     adams.flow.source.StorageValue -storage-name predict -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.control.ConditionalSubProcess -condition adams.flow.condition.bool.HasRows
      adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index second -reg-exp @{image_id}"
      adams.flow.transformer.SpreadSheetRowFilter -name "SpreadSheetRowFilter (3)" -finder "adams.data.spreadsheet.rowfinder.ByNumericValue -minimum @{min_score} -minimum-included true -maximum NaN"
     adams.flow.transformer.SpreadSheetVariableRowIterator -columns bbox,label -lenient true
     adams.flow.transformer.CallableTransformer -callable "parse locations"
   adams.flow.control.Trigger -name "remove overlaps"
    adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name predict -conversion adams.data.conversion.UnknownToUnknown
    adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
    adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
    adams.flow.transformer.SetVariable -var-name image_id
    adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_predict_@{image_id} -expand-value true
    adams.flow.control.Trigger -name "remove per image"
     adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.DeleteOverlappingImageObjects -finder adams.data.objectfinder.AllFinder -min-overlap-ratio @{min_overlap_removal}
     adams.flow.transformer.SetStorageValue -storage-name @{report_storage_name}
   adams.flow.control.Tee -name analyze
    adams.flow.control.Trigger -name "add row in stats"
     adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetInsertRow -no-copy true -after true
     adams.flow.transformer.SpreadSheetSetCell -name dataset -no-copy true -row last -col dataset -finder adams.data.spreadsheet.cellfinder.CellRange -value @{dataset} -force-string true
     adams.flow.transformer.SetStorageValue -storage-name stats
    adams.flow.control.Trigger -name actual_num
     adams.flow.standalone.SetVariable -name reset -var-name actual_num -var-value 0
     adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
     adams.flow.transformer.SetVariable -var-name image_id
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
     adams.flow.control.Trigger -name "actual num per image"
      adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.GetImageObjects -output-array true -finder adams.data.objectfinder.AllFinder
      adams.flow.transformer.ArrayLength
      adams.flow.transformer.SetVariable -var-name actual_num_image
      adams.flow.transformer.IncVariable -var-name actual_num -inc-int @{actual_num_image}
    adams.flow.control.Trigger -name predicted_num
     adams.flow.standalone.SetVariable -name reset -var-name predicted_num -var-value 0
     adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name predict -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
     adams.flow.transformer.SetVariable -var-name image_id
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_predict_@{image_id} -expand-value true
     adams.flow.control.Trigger -name "predicted num per image"
      adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.GetImageObjects -output-array true -finder adams.data.objectfinder.AllFinder
      adams.flow.transformer.ArrayLength
      adams.flow.transformer.SetVariable -name set -var-name predicted_num_image
      adams.flow.transformer.IncVariable -var-name predicted_num -inc-int @{predicted_num_image}
    adams.flow.control.Trigger -name "add actual and predicted num to stats"
     adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetSetCell -name actual_num -no-copy true -row last -col actual_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{actual_num}
     adams.flow.transformer.SpreadSheetSetCell -name predicted_num -no-copy true -row last -col predicted_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{predicted_num}
     adams.flow.transformer.SetStorageValue -storage-name stats
    adams.flow.control.Trigger -name overlap
     adams.flow.standalone.SetVariable -name "reset overlap_num" -var-name overlap_num -var-value 0
     adams.flow.standalone.SetVariable -name "reset fp_num" -var-name fp_num -var-value 0
     adams.flow.standalone.SetVariable -name "reset overlap_perc" -var-name overlap_perc -var-value 0
     adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -name "SpreadSheetRowFilter (2)" -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
     adams.flow.transformer.SetVariable -var-name image_id
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
     adams.flow.control.Trigger -name "overlap per image"
      adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.SetVariable -var-name predict_storage_name -var-value report_predict_@{image_id} -expand-value true
      adams.flow.control.ConditionalTrigger -name "predict report not exist?" -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.HasStorageValue -storage-name @{predict_storage_name}\""
       adams.flow.source.NewReport
       adams.flow.transformer.SetStorageValue -storage-name @{predict_storage_name}
      adams.flow.transformer.ImageObjectOverlap -storage-name @{predict_storage_name} -finder adams.data.objectfinder.AllFinder -min-overlap-ratio @{min_overlap} -label-key type
      adams.flow.transformer.Convert -conversion adams.data.conversion.ReportToSpreadSheet
      adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index 1 -reg-exp .*overlap_count"
      adams.flow.transformer.Convert -name "Convert (2)" -conversion "adams.data.conversion.SpreadSheetStringColumnToDouble -no-copy true -column last"
      adams.flow.control.ConditionalSubProcess -name "any rows?" -condition adams.flow.condition.bool.HasRows
       adams.flow.transformer.SpreadSheetRowFilter -name "SpreadSheetRowFilter (2)" -finder "adams.data.spreadsheet.rowfinder.ByNumericValue -minimum 1.0 -minimum-included true -maximum NaN"
      adams.flow.control.Tee -name num
       adams.flow.transformer.SpreadSheetInfo
       adams.flow.transformer.SetVariable -var-name overlap_num_image
       adams.flow.transformer.IncVariable -var-name overlap_num -inc-int @{overlap_num_image}
    adams.flow.control.Trigger -name "FP num"
     adams.flow.source.MathExpression -expression @{predicted_num}-@{overlap_num}
     adams.flow.transformer.Convert -conversion adams.data.conversion.DoubleToInt
     adams.flow.transformer.SetVariable -var-name fp_num
    adams.flow.control.ConditionalTrigger -name "overlap perc" -condition "adams.flow.condition.bool.Expression -expression \"@{overlap_num} > 0\""
     adams.flow.source.MathExpression -expression "@{overlap_num} / (@{actual_num}+@{fp_num})"
     adams.flow.transformer.SetVariable -var-name overlap_perc
    adams.flow.control.Trigger -name "add stats"
     adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetSetCell -name overlap_num -no-copy true -row last -col overlap_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{overlap_num}
     adams.flow.transformer.SpreadSheetSetCell -name fp_num -no-copy true -row last -col fp_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{fp_num}
     adams.flow.transformer.SpreadSheetSetCell -name overlap_perc -no-copy true -row last -col overlap_perc -finder adams.data.spreadsheet.cellfinder.CellRange -value @{overlap_perc}
     adams.flow.transformer.SetStorageValue -storage-name stats
    adams.flow.control.Trigger -name matching
     adams.flow.standalone.SetVariable -name matching_num -var-name matching_num -var-value 0
     adams.flow.standalone.SetVariable -name matching_perc -var-name matching_perc -var-value 0
     adams.flow.standalone.SetVariable -name "accuracy (2)" -var-name accuracy -var-value 0
     adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
     adams.flow.transformer.SetVariable -var-name image_id
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
     adams.flow.control.Trigger -name "matching per image"
      adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.SetVariable -var-name predict_storage_name -var-value report_predict_@{image_id} -expand-value true
      adams.flow.transformer.ImageObjectOverlap -storage-name @{predict_storage_name} -finder adams.data.objectfinder.AllFinder -min-overlap-ratio @{min_overlap} -label-key type
      adams.flow.control.Tee -name "count matches"
       adams.flow.transformer.GetImageObjects -finder adams.data.objectfinder.AllFinder
       adams.flow.transformer.GetImageObjectMetaData
       adams.flow.control.Tee -name overlap_count
        adams.flow.transformer.GetMapValue -key overlap_count
        adams.flow.transformer.SetVariable -var-name overlap_count
       adams.flow.transformer.SetVariable -name "reset match" -var-name overlap_label_highest_match -var-value false
       adams.flow.control.Tee -name overlap_label_highest_match
        adams.flow.transformer.GetMapValue -key overlap_label_highest_match
        adams.flow.transformer.SetVariable -var-name overlap_label_highest_match
       adams.flow.control.ConditionalTee -name "inc matching_num" -condition "adams.flow.condition.bool.Expression -expression \"(@{overlap_count} > 0) and (@{overlap_label_highest_match} = true)\""
        adams.flow.transformer.IncVariable -var-name matching_num
    adams.flow.control.Trigger -name "false neg"
     adams.flow.source.MathExpression -expression @{actual_num}-@{matching_num}
     adams.flow.transformer.Convert -conversion adams.data.conversion.DoubleToInt
     adams.flow.transformer.SetVariable -var-name fn_num
    adams.flow.control.ConditionalTrigger -name percentage -condition "adams.flow.condition.bool.Expression -expression \"@{overlap_num} > 0\""
     adams.flow.source.MathExpression -expression "@{matching_num} / @{overlap_num}"
     adams.flow.transformer.SetVariable -var-name matching_perc
    adams.flow.control.ConditionalTrigger -name accuracy -condition "adams.flow.condition.bool.Expression -expression \"@{overlap_num} > 0\""
     adams.flow.source.MathExpression -expression "(@{matching_num} / (@{matching_num}+@{fp_num}+@{fn_num}))*100"
     adams.flow.transformer.SetVariable -var-name accuracy
    adams.flow.control.Trigger -name "add stats (2)"
     adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetSetCell -name fn_num -no-copy true -row last -col fn_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{fn_num}
     adams.flow.transformer.SpreadSheetSetCell -name matching_num -no-copy true -row last -col matching_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{matching_num}
     adams.flow.transformer.SpreadSheetSetCell -name matching_perc -no-copy true -row last -col matching_perc -finder adams.data.spreadsheet.cellfinder.CellRange -value @{matching_perc}
     adams.flow.transformer.SpreadSheetSetCell -name accuracy -no-copy true -row last -col accuracy(%) -finder adams.data.spreadsheet.cellfinder.CellRange -value @{accuracy}
     adams.flow.transformer.SetStorageValue -storage-name stats
    adams.flow.control.Trigger -name "matching per label"
     adams.flow.source.StorageValue -storage-name classes -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.ArrayToSequence
     adams.flow.transformer.SetVariable -var-name class
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name class_regexp -var-value ^@{class}$ -expand-value true
     adams.flow.control.Trigger -name matching
      adams.flow.standalone.SetVariable -name matching_num -var-name matching_num -var-value 0
      adams.flow.standalone.SetVariable -name matching_perc -var-name matching_perc -var-value 0
      adams.flow.standalone.SetVariable -name "actual num col" -var-name act_num_col -var-value @{class}_overlap_num -expand-value true
      adams.flow.standalone.SetVariable -name "matching num col" -var-name num_col -var-value @{class}_matching_num -expand-value true
      adams.flow.standalone.SetVariable -name "perc col" -var-name perc_col -var-value @{class}_matching_perc -expand-value true
      adams.flow.standalone.SetVariable -name "num objects" -var-name num_objects -var-value 0
      adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
      adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
      adams.flow.transformer.SetVariable -var-name image_id
      adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
      adams.flow.control.Trigger -name "matching per image"
       adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
       adams.flow.transformer.SetVariable -var-name predict_storage_name -var-value report_predict_@{image_id} -expand-value true
       adams.flow.transformer.ImageObjectOverlap -storage-name @{predict_storage_name} -finder "adams.data.objectfinder.ByMetaDataStringValue -key type -regexp @{class_regexp}" -min-overlap-ratio @{min_overlap} -label-key type
       adams.flow.control.Tee -name "count matches"
        adams.flow.transformer.GetImageObjects -output-array true -finder adams.data.objectfinder.AllFinder
        adams.flow.control.Tee -name "# objects"
         adams.flow.transformer.ArrayLength
         adams.flow.transformer.SetVariable -var-name num_objects_image
         adams.flow.transformer.IncVariable -var-name num_objects -inc-int @{num_objects_image}
        adams.flow.transformer.ArrayToSequence
        adams.flow.transformer.GetImageObjectMetaData
        adams.flow.control.Tee -name overlap_count
         adams.flow.transformer.GetMapValue -key overlap_count
         adams.flow.transformer.SetVariable -var-name overlap_count
        adams.flow.transformer.SetVariable -name "reset match" -var-name overlap_label_highest_match -var-value false
        adams.flow.control.Tee -name overlap_label_highest_match
         adams.flow.transformer.GetMapValue -key overlap_label_highest_match
         adams.flow.transformer.SetVariable -var-name overlap_label_highest_match
        adams.flow.control.ConditionalTee -name "inc matching_num" -condition "adams.flow.condition.bool.Expression -expression \"(@{overlap_count} > 0) and (@{overlap_label_highest_match} = true)\""
         adams.flow.transformer.IncVariable -var-name matching_num
    adams.flow.control.ConditionalTrigger -name "percentage (2)" -condition "adams.flow.condition.bool.Expression -expression \"@{num_objects} > 0\""
     adams.flow.source.MathExpression -expression "@{matching_num} / @{num_objects}"
     adams.flow.transformer.SetVariable -var-name matching_perc
    adams.flow.control.Trigger -name "add stats (3)"
     adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetSetCell -name actual_num -no-copy true -row last -col @{act_num_col} -finder adams.data.spreadsheet.cellfinder.CellRange -value @{num_objects}
     adams.flow.transformer.SpreadSheetSetCell -name matching_num -no-copy true -row last -col @{num_col} -finder adams.data.spreadsheet.cellfinder.CellRange -value @{matching_num}
     adams.flow.transformer.SpreadSheetSetCell -name matching_perc -no-copy true -row last -col @{perc_col} -finder adams.data.spreadsheet.cellfinder.CellRange -value @{matching_perc}
     adams.flow.transformer.SetStorageValue -storage-name stats
    adams.flow.control.Trigger -name "confusion matrix"
     adams.flow.source.StorageValue -name "StorageValue (2)" -storage-name actual -conversion adams.data.conversion.UnknownToUnknown
     adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.ByValue -att-index first -reg-exp @{dataset}"
     adams.flow.transformer.SpreadSheetInfo -type CELL_VALUES -column-index second
     adams.flow.transformer.SetVariable -var-name image_id
     adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name report_storage_name -var-value report_actual_@{image_id} -expand-value true
     adams.flow.control.Trigger -name "per image"
      adams.flow.source.StorageValue -storage-name @{report_storage_name} -conversion adams.data.conversion.UnknownToUnknown
      adams.flow.transformer.SetVariable -var-name predict_storage_name -var-value report_predict_@{image_id} -expand-value true
      adams.flow.transformer.ImageObjectOverlap -storage-name @{predict_storage_name} -finder adams.data.objectfinder.AllFinder -min-overlap-ratio @{min_overlap} -label-key type -additional-object true
      adams.flow.transformer.GetImageObjects -finder adams.data.objectfinder.AllFinder
      adams.flow.transformer.GetImageObjectMetaData
      adams.flow.transformer.SetVariable -name "reset actual" -var-name actual -var-value ???
      adams.flow.control.Tee -name "additional object?"
       adams.flow.transformer.GetMapValue -key additional_object
       adams.flow.transformer.SetVariable -var-name additional
      adams.flow.control.ConditionalTee -name actual -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.Expression -expression (@{additional})\""
       adams.flow.transformer.GetMapValue -key type
       adams.flow.transformer.SetVariable -var-name actual
      adams.flow.transformer.SetVariable -name "reset predicted" -var-name predicted -var-value ???
      adams.flow.control.ConditionalTee -name "predicted (2)" -condition "adams.flow.condition.bool.Expression -expression (@{additional})"
       adams.flow.transformer.GetMapValue -key type
       adams.flow.transformer.SetVariable -var-name predicted
      adams.flow.control.ConditionalTee -name predicted -condition "adams.flow.condition.bool.Not -condition \"adams.flow.condition.bool.Expression -expression (@{additional})\""
       adams.flow.transformer.GetMapValue -key overlap_label_highest
       adams.flow.transformer.SetVariable -var-name predicted
      adams.flow.transformer.SetVariable -name "reset overlap" -var-name overlap -var-value 0
      adams.flow.control.Tee -name overlap
       adams.flow.transformer.GetMapValue -key overlap_highest
       adams.flow.transformer.SetVariable -var-name overlap
      adams.flow.control.Trigger -name "add prediction to confusion matrix"
       adams.flow.source.StorageValue -storage-name confmatrix -conversion adams.data.conversion.UnknownToUnknown
       adams.flow.transformer.SpreadSheetInsertRow -no-copy true -after true
       adams.flow.transformer.SpreadSheetSetCell -name file -no-copy true -row last -col File -finder adams.data.spreadsheet.cellfinder.CellRange -value @{name} -force-string true
       adams.flow.transformer.SpreadSheetSetCell -name actual -no-copy true -row last -col Actual -finder adams.data.spreadsheet.cellfinder.CellRange -value @{actual} -force-string true
       adams.flow.transformer.SpreadSheetSetCell -name predicted -no-copy true -row last -col Predicted -finder adams.data.spreadsheet.cellfinder.CellRange -value @{predicted} -force-string true
       adams.flow.transformer.SpreadSheetSetCell -name probability -no-copy true -row last -col Probability -finder adams.data.spreadsheet.cellfinder.CellRange -value @{overlap}
       adams.flow.transformer.SetStorageValue -storage-name confmatrix
      adams.flow.transformer.DeleteStorageValue -storage-name @{report_storage_name}
      adams.flow.transformer.DeleteStorageValue -name "DeleteStorageValue (2)" -storage-name @{predict_storage_name}
  adams.flow.control.Trigger -name Total
   adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.control.Tee -name "fp num total"
    adams.flow.transformer.SpreadSheetColumnStatistic -column fp_num -statistic adams.data.spreadsheet.colstatistic.Sum
    adams.flow.transformer.SpreadSheetGetCell -row last -col last
    adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
    adams.flow.transformer.Convert -name "Convert (2)" -conversion adams.data.conversion.DoubleToInt
    adams.flow.transformer.SetVariable -var-name fp_num_total
   adams.flow.control.Tee -name "fn num total"
    adams.flow.transformer.SpreadSheetColumnStatistic -column fn_num -statistic adams.data.spreadsheet.colstatistic.Sum
    adams.flow.transformer.SpreadSheetGetCell -row last -col last
    adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
    adams.flow.transformer.Convert -name "Convert (2)" -conversion adams.data.conversion.DoubleToInt
    adams.flow.transformer.SetVariable -var-name fn_num_total
   adams.flow.control.Tee -name "matching num total"
    adams.flow.transformer.SpreadSheetColumnStatistic -column matching_num -statistic adams.data.spreadsheet.colstatistic.Sum
    adams.flow.transformer.SpreadSheetGetCell -row last -col last
    adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
    adams.flow.transformer.Convert -name "Convert (2)" -conversion adams.data.conversion.DoubleToInt
    adams.flow.transformer.SetVariable -var-name matching_num_total
   adams.flow.control.Trigger -name "Total accuracy"
    adams.flow.source.MathExpression -expression "(@{matching_num_total} / (@{matching_num_total}+@{fp_num_total}+@{fn_num_total}))*100"
    adams.flow.transformer.SetVariable -var-name accuracy_total
   adams.flow.transformer.SpreadSheetInsertRow -name "SpreadSheetInsertRow (2)" -after true
   adams.flow.transformer.SpreadSheetInsertRow -after true
   adams.flow.transformer.SpreadSheetSetCell -name dataset -no-copy true -row last -col dataset -finder adams.data.spreadsheet.cellfinder.SingleCell -value TOTAL
   adams.flow.transformer.SpreadSheetSetCell -name matching_num_total -no-copy true -row last -col matching_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{matching_num_total}
   adams.flow.transformer.SpreadSheetSetCell -name fp_num_total -no-copy true -row last -col fp_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{fp_num_total}
   adams.flow.transformer.SpreadSheetSetCell -name fn_num_total -no-copy true -row last -col fn_num -finder adams.data.spreadsheet.cellfinder.CellRange -value @{fn_num_total}
   adams.flow.transformer.SpreadSheetSetCell -name accuracy_total -no-copy true -row last -col accuracy(%) -finder adams.data.spreadsheet.cellfinder.CellRange -value @{accuracy_total}
   adams.flow.transformer.SetStorageValue -storage-name stats
  adams.flow.control.Trigger -name "display stats"
   adams.flow.source.StorageValue -storage-name stats -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.sink.CallableSink -callable "save and display stats"
  adams.flow.control.Trigger -name "confusion matrix"
   adams.flow.source.StorageValue -storage-name confmatrix -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.control.Tee -name overall
    adams.flow.transformer.SetVariable -var-name entry -var-value overall
    adams.flow.transformer.ConfusionMatrix -actual-column Actual -predicted-column Predicted
    adams.flow.sink.CallableSink -callable "save and display confmatrix"
   adams.flow.control.Tee -name "overall (row perc)"
    adams.flow.transformer.SetVariable -var-name entry -var-value "overall percentage"
    adams.flow.transformer.ConfusionMatrix -actual-column Actual -predicted-column Predicted -matrix-values PERCENTAGES
    adams.flow.control.Tee -name "better accuracy?"
     adams.flow.transformer.SpreadSheetGetCell -row last -col last
     adams.flow.transformer.Convert -conversion adams.data.conversion.StringToDouble
     adams.flow.control.ConditionalTee -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\'X\\\\\\\' > @{best_accuracy}\""
      adams.flow.transformer.SetVariable -var-name best_accuracy
      adams.flow.transformer.SetVariable -name "SetVariable (2)" -var-name best_min_score -var-value @{min_score}
    adams.flow.sink.CallableSink -callable "save and display confmatrix"
   adams.flow.control.Tee -name "per file"
    adams.flow.transformer.SpreadSheetSubsetByValue
    adams.flow.control.Tee -name file
     adams.flow.transformer.SpreadSheetGetCell
     adams.flow.transformer.SetVariable -var-name entry
    adams.flow.transformer.ConfusionMatrix -actual-column Actual -predicted-column Predicted
    adams.flow.sink.CallableSink -callable "save and display confmatrix"
 adams.flow.control.Trigger -name "write best accuracy to file"
  adams.flow.source.Variable -var-name output_dir -conversion adams.data.conversion.StringToString
  adams.flow.transformer.AppendName -suffix best_accuracy.txt -use-forward-slashes true
  adams.flow.transformer.SetVariable -var-name best_accuracy_file_name
  adams.flow.control.Trigger -name "best min score"
   adams.flow.standalone.SetVariable -var-name best_min_score_txt -var-value "Best min score:\\t@{best_min_score}" -expand-value true
  adams.flow.control.Trigger -name "best accuracy"
   adams.flow.standalone.SetVariable -var-name best_accuracy_txt -var-value "Best accuracy:\\t@{best_accuracy}" -expand-value true
  adams.flow.control.Trigger -name "dump to file"
   adams.flow.source.Variable -var-name best_min_score_txt -conversion adams.data.conversion.StringToString
   adams.flow.sink.DumpFile -output @{best_accuracy_file_name} -append true
  adams.flow.control.Trigger -name "dump to file (2)"
   adams.flow.source.Variable -var-name best_accuracy_txt -conversion adams.data.conversion.StringToString
   adams.flow.sink.DumpFile -output @{best_accuracy_file_name} -append true